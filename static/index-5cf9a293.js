import{aE as e,bD as o,bb as s,cq as t,bu as n,u as a,cr as u,aS as r,N as c,R as d,bw as l,L as i,cs as p,M as E,bR as m,b as T,g as y,d as S,C as b,e as f,U as v}from"./index-442db11c.js";import{t as M}from"./focus-trap-1ae2c557.js";import{a as A}from"./scroll-327f18e0.js";var L=(e=>(e[e.TEXT=1]="TEXT",e[e.CLASS=2]="CLASS",e[e.STYLE=4]="STYLE",e[e.PROPS=8]="PROPS",e[e.FULL_PROPS=16]="FULL_PROPS",e[e.HYDRATE_EVENTS=32]="HYDRATE_EVENTS",e[e.STABLE_FRAGMENT=64]="STABLE_FRAGMENT",e[e.KEYED_FRAGMENT=128]="KEYED_FRAGMENT",e[e.UNKEYED_FRAGMENT=256]="UNKEYED_FRAGMENT",e[e.NEED_PATCH=512]="NEED_PATCH",e[e.DYNAMIC_SLOTS=1024]="DYNAMIC_SLOTS",e[e.HOISTED=-1]="HOISTED",e[e.BAIL=-2]="BAIL",e))(L||{});const h=e=>{if(!o(e))return{};const n=e.props||{},a=(o(e.type)?e.type.props:void 0)||{},u={};return Object.keys(a).forEach((e=>{s(a[e],"default")&&(u[e]=a[e].default)})),Object.keys(n).forEach((e=>{u[t(e)]=n[e]})),u},C=s=>{const t=e(s)?s:[s],n=[];return t.forEach((s=>{var t;e(s)?n.push(...C(s)):o(s)&&e(s.children)?n.push(...C(s.children)):(n.push(s),o(s)&&(null==(t=s.component)?void 0:t.subTree)&&n.push(...C(s.component.subTree)))})),n},N=(e,o={})=>{n(e)||M("[useLockscreen]","You need to pass a ref param to this function");const s=o.ns||a("popup"),t=u((()=>s.bm("parent","hidden")));if(!r||c(document.body,t.value))return;let m=0,T=!1,y="0";const S=()=>{setTimeout((()=>{E(null==document?void 0:document.body,t.value),T&&document&&(document.body.style.width=y)}),200)};d(e,(e=>{if(!e)return void S();T=!c(document.body,t.value),T&&(y=document.body.style.width),m=A(s.namespace.value);const o=document.documentElement.clientHeight<document.body.scrollHeight,n=l(document.body,"overflowY");m>0&&(o||"scroll"===n)&&T&&(document.body.style.width=`calc(100% - ${m}px)`),i(document.body,t.value)})),p((()=>S()))},R=e=>{if(!e)return{onClick:m,onMousedown:m,onMouseup:m};let o=!1,s=!1;return{onClick:t=>{o&&s&&e(t),o=s=!1},onMousedown:e=>{o=e.target===e.currentTarget},onMouseup:e=>{s=e.target===e.currentTarget}}},k=T({mask:{type:Boolean,default:!0},customMaskEvent:{type:Boolean,default:!1},overlayClass:{type:y([String,Array,Object])},zIndex:{type:y([String,Number])}});const _=S({name:"ElOverlay",props:k,emits:{click:e=>e instanceof MouseEvent},setup(e,{slots:o,emit:s}){const t=a("overlay"),{onClick:n,onMousedown:u,onMouseup:r}=R(e.customMaskEvent?void 0:e=>{s("click",e)});return()=>e.mask?b("div",{class:[t.b(),e.overlayClass],style:{zIndex:e.zIndex},onClick:n,onMousedown:u,onMouseup:r},[f(o,"default")],L.STYLE|L.CLASS|L.PROPS,["onClick","onMouseup","onMousedown"]):v("div",{class:e.overlayClass,style:{zIndex:e.zIndex,position:"fixed",top:"0px",right:"0px",bottom:"0px",left:"0px"}},[f(o,"default")])}});export{_ as E,R as a,C as f,h as g,N as u};
